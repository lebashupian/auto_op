#!/opt/ruby-2.5.1/bin/ruby -w
# coding: utf-8

begin
	require "curses"
	require_relative 'process_bar'

	接收端 = UDPSocket.new
	接收端.bind "127.0.0.1" 4000

	线程A_循环次数=1000
	线程B_循环次数=1000
	线程C_循环次数=1000
	线程D_循环次数=1000

	$进度条A=C_进度条.new(线程A_循环次数,"处理进度")
	$进度条B=C_进度条.new(线程B_循环次数,"处理进度")
	$进度条C=C_进度条.new(线程C_循环次数,"处理进度")
	$进度条D=C_进度条.new(线程D_循环次数,"处理进度")

	Curses.init_screen
	Curses.curs_set(0)  # 0 表示隐藏光标

	#引入互斥的原因，是因为在多个线程中，setpos这个操作可能会发生相互干扰，导致页面出现混乱。
	#如果拿到锁的程序执行时间太长，会导致锁不够用。有些线程可能被饿死
	互斥系统 = Mutex.new

	#这个时间不宜过短，否则其他线程抢不到锁
	刷新延迟 = 争抢锁延迟 = 0.01



	Thread.new {
	  线程A_循环次数.times {|x|
	    互斥系统.synchronize {
	      Curses.setpos(1,2)
	      Curses.addstr("线程A #{x}")
	      Curses.refresh
	    }

	    sleep 刷新延迟
	  }
	}



	Thread.new {
	  线程B_循环次数.times {|x|
	  互斥系统.synchronize {
	    Curses.setpos(2,2)
	    Curses.addstr("线程B #{x}")
	    Curses.refresh
	  }

	  sleep 刷新延迟
	  } 
	}



	Thread.new {
	  线程C_循环次数.times {|x|
	  互斥系统.synchronize {
	    Curses.setpos(1,50)
	    Curses.addstr("线程C #{$进度条C.更新}")
	    Curses.refresh
	  }

	  sleep 刷新延迟
	  
	  } 
	}


	Thread.new {
	  线程D_循环次数.times {|x|
	  互斥系统.synchronize {
	    Curses.setpos(2,50)
	    Curses.addstr("线程D #{$进度条D.更新}")
	    Curses.refresh
	  }

	  sleep 刷新延迟
	  }
	}


	Curses.setpos(0,0)
	Curses.addstr("----------------------数据1-----------------------------")
	Curses.setpos(1,0)
	Curses.addstr("|")
	Curses.setpos(2,0)
	Curses.addstr("|")
	Curses.setpos(1,20)
	Curses.addstr("|")
	Curses.setpos(2,20)
	Curses.addstr("|")
	Curses.setpos(3,0)
	Curses.addstr("----------------------数据2----------------------------")


	sleep 1000*1000*1000

	Curses.close_screen	
rescue Exception => e
	puts e
	exit 1
end








=begin
def show_message(message=nil)
  height = 3######################Curses.lines/
  width  = Curses.cols ############Curses.cols/1                #message.length + 6
  top    =  0                  #  (Curses.lines - height) / 2
  left   =  0                 #(Curses.cols - width) / 2
  win = Curses::Window.new(height, width, top, left)
  #win.box("|", "*")
  win.setpos(1,1)
  message = $进度条.更新
  win.addstr(message)
  win.refresh
  #win.getch
  sleep 0.001
  win.close
end

def show_message2(message=nil)
  height = 3######################Curses.lines/
  width  = Curses.cols ############Curses.cols/1                #message.length + 6
  top    =  0                  #  (Curses.lines - height) / 2
  left   =  0                 #(Curses.cols - width) / 2
  win = Curses::Window.new(height, width, top, left)
  #win.box("|", "*")
  win.setpos(5,1)
  message = $进度条.更新
  win.addstr(message)
  win.refresh
  #win.getch
  sleep 0.001
  win.close
end


Curses.init_screen

1000.times {|x|
  #show_message 22
  #show_message2 22
}


Curses.close_screen



=end


=begin
loop {
 Curses.init_screen
begin
  Curses.crmode
  Curses.setpos((Curses.lines - 1) / 2, (Curses.cols - 11) / 2)
  Curses.addstr("Hit any key")
  Curses.refresh
  #Curses.getch
  sleep 1
  Curses.addstr("Hit any key2")
  #show_message("Hello, World!")
  Curses.refresh  
  sleep 1

ensure
  Curses.close_screen
end 
}
=end
